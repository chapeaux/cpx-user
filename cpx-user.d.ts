export declare class CPXUser extends HTMLElement {
    static get tag(): string;
    _authenticated: boolean;
    _userId: string;
    get userId(): string;
    set userId(val: string);
    _givenname: string;
    get givenname(): string;
    set givenname(val: string);
    _email: string;
    get email(): string;
    set email(val: string);
    _token: any;
    get token(): any;
    set token(val: any);
    _eddl: boolean;
    get eddl(): boolean;
    set eddl(val: boolean);
    _eddlCustKey: string;
    get eddlCustKey(): string;
    set eddlCustKey(val: string);
    _eddlUserId: string;
    get eddlUserId(): string;
    set eddlUserId(val: string);
    _eddlLoggedIn: string;
    get eddlLoggedIn(): string;
    set eddlLoggedIn(val: string);
    _ready: boolean;
    get ready(): boolean;
    set ready(val: boolean);
    _user: any;
    get user(): any;
    set user(val: any);
    _worker: any;
    get worker(): any;
    constructor();
    connectedCallback(): void;
    static get observedAttributes(): string[];
    attributeChangedCallback(name: string, oldVal: string, newVal: string): void;
    generateHash(txt: any): Promise<string>;
    camelCase(str: String, to?: boolean): string;
    onmessage(e: any): void;
    dispatchEDDL(): Promise<void>;
    initWorker(): Promise<void>;
}
